//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaCarlosEntities1 : DbContext
    {
        public PruebaCarlosEntities1()
            : base("name=PruebaCarlosEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_GetPersona_Result> sp_GetPersona(Nullable<long> id_Persona)
        {
            var id_PersonaParameter = id_Persona.HasValue ?
                new ObjectParameter("Id_Persona", id_Persona) :
                new ObjectParameter("Id_Persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPersona_Result>("sp_GetPersona", id_PersonaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_CreatePersona(string nombre, string apellido)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_CreatePersona", nombreParameter, apellidoParameter);
        }
    
        public virtual ObjectResult<sp_GetListPersona_Result> sp_GetListPersona()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetListPersona_Result>("sp_GetListPersona");
        }
    
        public virtual int sp_UpdatePersona(Nullable<long> id_Persona, string nombre, string apellido)
        {
            var id_PersonaParameter = id_Persona.HasValue ?
                new ObjectParameter("Id_Persona", id_Persona) :
                new ObjectParameter("Id_Persona", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePersona", id_PersonaParameter, nombreParameter, apellidoParameter);
        }
    }
}
